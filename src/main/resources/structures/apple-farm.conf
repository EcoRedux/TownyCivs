# Id is stored into database, you should never change its value
Id: apple_farm
# Name is what players see in chat or various inventory menus, can be changed any time
Name: Apple Farm
# Structure Tick rate (Upkeep & production processing), in seconds
Period: 20
# Inventory Menus icons
Material: apple
CustomModelData: 3
#Max count per town
MaxCount: 3
# XZY
# Radius + 1
AreaRadius: 5x10x5
#The more important the output is the lesser value should be here.
# 1 = saves each tick
# 0 and less = errors, you have been warned
SaveEachNTicks: 100

# Negative value to lower town tax.
# Total town tax will never be negative
AdditionalTaxAmount: 10

Tags: [
  Factory
]

#minimessage format
Description: [
  Automatic <red>apple</red> farm


  Produces a <red>apple</red> every 20 seconds

  "Build requirements:"
  " -<#D35400>fence</#D35400>: 5x, <#D35400>fence gate<#D35400>: 1x, <yellow>sand</yellow>: 3x"
  " - container: exactly 1x"
]

BuyRequirements: [
  {
    Mechanic: permission
    Value: "townycolonies.builds.farms.apple"
  }
  {
    Mechanic: price
    Value: 550
  }
]

PlaceRequirements: [
  {
    Mechanic: banned_biomes
    Value: [
      "minecraft:desert"
    ]
  }
]

Production: [
  {
    Mechanic: item
    Value: {
      Items: [
        {
          Material: "apple"
          Amount: 5
        }
      ]
    }
  }
]

Upkeep: [
  # If you want to use Mechanic "price" in Production or Upkeep make sure you use
  # 1) Towny compatible economy plugin
  # 2) be 120% sure that the economy plugin you use supports thread safety for reading & writing account balance
  #    If you DONT KNOW if thats your case *DO NOT* ask for help TownyColonies developers, go bug yor economy plugin developers instead !!
  {
    Mechanic: price
    Value: 1
  }

  {
    Mechanic: item
    Value: {
      Items: [
        {
          # If the item has durability (tools & armor) each tick will damage item by 1
          # Items can be taken out of chest input at any time, but only display name, enchantments, lore and custom item model will be preserved
          # All other custom metadata will be lost
          # Durability will work in similar manner as in minecraft 100/(1+level)=chance for item to lose 1 durability
          Material: "minecraft:shears"
          CustomModelData: 10
        }
        # If the material has no durability its converted into fuel
        # Such items are lost and cannot be taken out of the structure
        # 1 tick = -1 Fuel unit
        {
          Material: "minecraft:iron"
          CustomModelData: 10
          Fuel: 10
        }
      ]
    }
  }
]

Blocks: {
  "tc:leaves": 9
  "tc:fence": 14
  "tc:fence_gate": 1
  "tc:wood": 3
  "!tc:container": 1
}
